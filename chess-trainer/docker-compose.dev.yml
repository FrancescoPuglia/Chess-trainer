# â™” DEVELOPMENT ENVIRONMENT - DOCKER COMPOSE
# Optimized for local development with hot reload and debugging

version: '3.8'

services:
  # Development Application with Hot Reload
  chess-trainer-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: chess-trainer-dev
    ports:
      - "3000:3000"
      - "24678:24678" # Vite HMR port
    environment:
      - NODE_ENV=development
      - VITE_DEV_TOOLS=true
      - VITE_DEBUG_MODE=true
    volumes:
      - .:/app:cached
      - /app/node_modules
      - /app/dist
    networks:
      - chess-trainer-dev-network
    command: npm run dev
    stdin_open: true
    tty: true

  # Development Database (PostgreSQL for advanced features)
  postgres-dev:
    image: postgres:15-alpine
    container_name: chess-trainer-postgres-dev
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=chess_trainer_dev
      - POSTGRES_USER=chess_trainer
      - POSTGRES_PASSWORD=dev_password_123
    volumes:
      - postgres-dev-data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - chess-trainer-dev-network

  # Redis for Development Caching
  redis-dev:
    image: redis:7-alpine
    container_name: chess-trainer-redis-dev
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass dev_redis_123
    volumes:
      - redis-dev-data:/data
    networks:
      - chess-trainer-dev-network

  # Development API Server (Mock/Stub)
  api-dev:
    image: node:20-alpine
    container_name: chess-trainer-api-dev
    working_dir: /app
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - PORT=8080
    volumes:
      - ./dev-api:/app:cached
    command: sh -c "npm install && npm run dev"
    networks:
      - chess-trainer-dev-network

  # MailCatcher for Email Testing
  mailcatcher:
    image: schickling/mailcatcher
    container_name: chess-trainer-mailcatcher
    ports:
      - "1080:1080" # Web interface
      - "1025:1025" # SMTP
    networks:
      - chess-trainer-dev-network

  # MinIO for S3-compatible Storage Testing
  minio:
    image: minio/minio:latest
    container_name: chess-trainer-minio-dev
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minio_admin
      - MINIO_ROOT_PASSWORD=minio_password_123
    volumes:
      - minio-dev-data:/data
    command: server /data --console-address ":9001"
    networks:
      - chess-trainer-dev-network

  # Nginx for Development Reverse Proxy
  nginx-dev:
    image: nginx:alpine
    container_name: chess-trainer-nginx-dev
    ports:
      - "80:80"
    volumes:
      - ./nginx-dev.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - chess-trainer-dev
      - api-dev
    networks:
      - chess-trainer-dev-network

networks:
  chess-trainer-dev-network:
    driver: bridge

volumes:
  postgres-dev-data:
    driver: local
  redis-dev-data:
    driver: local
  minio-dev-data:
    driver: local